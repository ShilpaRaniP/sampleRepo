<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-20T16:43:10 IST" name="Suite" finished-at="2025-02-20T16:43:24 IST" duration-ms="14932">
    <groups>
    </groups>
    <test started-at="2025-02-20T16:43:10 IST" name="TestRunner-chrome" finished-at="2025-02-20T16:43:23 IST" duration-ms="13533">
      <class name="practice.testng.InvoiceTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:practice.testng.InvoiceTest@1ca3b418]" started-at="2025-02-20T16:43:10 IST" name="configBC" finished-at="2025-02-20T16:43:12 IST" duration-ms="2955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:practice.testng.InvoiceTest@1ca3b418]" started-at="2025-02-20T16:43:13 IST" name="configBM" finished-at="2025-02-20T16:43:18 IST" duration-ms="5278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createInvoiceTest()[pri:0, instance:practice.testng.InvoiceTest@1ca3b418]" started-at="2025-02-20T16:43:18 IST" name="createInvoiceTest" finished-at="2025-02-20T16:43:18 IST" duration-ms="135" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Login] but found [Admin123@ Administrator1 - Home - vtiger CRM 5 - Commercial Open Source CRM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Login] but found [Admin123@ Administrator1 - Home - vtiger CRM 5 - Commercial Open Source CRM]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at practice.testng.InvoiceTest.createInvoiceTest(InvoiceTest.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvoiceTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:practice.testng.InvoiceTest@1ca3b418]" started-at="2025-02-20T16:43:19 IST" name="configAM" finished-at="2025-02-20T16:43:20 IST" duration-ms="1126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:practice.testng.InvoiceTest@1ca3b418]" started-at="2025-02-20T16:43:20 IST" name="configBM" finished-at="2025-02-20T16:43:22 IST" duration-ms="1412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createInvoiceWithContactTest()[pri:0, instance:practice.testng.InvoiceTest@1ca3b418]" started-at="2025-02-20T16:43:22 IST" name="createInvoiceWithContactTest" finished-at="2025-02-20T16:43:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvoiceWithContactTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:practice.testng.InvoiceTest@1ca3b418]" started-at="2025-02-20T16:43:22 IST" name="configAM" finished-at="2025-02-20T16:43:23 IST" duration-ms="1112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:practice.testng.InvoiceTest@1ca3b418]" started-at="2025-02-20T16:43:23 IST" name="configAC" finished-at="2025-02-20T16:43:23 IST" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- practice.testng.InvoiceTest -->
    </test> <!-- TestRunner-chrome -->
    <test started-at="2025-02-20T16:43:10 IST" name="TestRunner-edge" finished-at="2025-02-20T16:43:24 IST" duration-ms="14932">
      <class name="practice.testng.InvoiceTest">
        <test-method is-config="true" signature="configBS()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:09 IST" name="configBS" finished-at="2025-02-20T16:43:10 IST" duration-ms="653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:10 IST" name="configBC" finished-at="2025-02-20T16:43:13 IST" duration-ms="3091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:13 IST" name="configBM" finished-at="2025-02-20T16:43:19 IST" duration-ms="6006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createInvoiceTest()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:19 IST" name="createInvoiceTest" finished-at="2025-02-20T16:43:19 IST" duration-ms="352" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Login] but found [Admin123@ Administrator1 - Home - vtiger CRM 5 - Commercial Open Source CRM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Login] but found [Admin123@ Administrator1 - Home - vtiger CRM 5 - Commercial Open Source CRM]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at practice.testng.InvoiceTest.createInvoiceTest(InvoiceTest.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvoiceTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:19 IST" name="configAM" finished-at="2025-02-20T16:43:21 IST" duration-ms="1129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:21 IST" name="configBM" finished-at="2025-02-20T16:43:22 IST" duration-ms="1428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createInvoiceWithContactTest()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:22 IST" name="createInvoiceWithContactTest" finished-at="2025-02-20T16:43:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvoiceWithContactTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:22 IST" name="configAM" finished-at="2025-02-20T16:43:23 IST" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:23 IST" name="configAC" finished-at="2025-02-20T16:43:24 IST" duration-ms="1314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method is-config="true" signature="configAS()[pri:0, instance:practice.testng.InvoiceTest@7188af83]" started-at="2025-02-20T16:43:24 IST" name="configAS" finished-at="2025-02-20T16:43:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
      </class> <!-- practice.testng.InvoiceTest -->
    </test> <!-- TestRunner-edge -->
  </suite> <!-- Suite -->
</testng-results>
